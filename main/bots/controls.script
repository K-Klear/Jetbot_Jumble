go.property("player", 1)
go.property("up", 1)
go.property("left", 1)
go.property("right", 1)
go.property("jet_top_left", false)
go.property("jet_top_right", false)
go.property("jet_bottom_left", false)
go.property("jet_bottom_right", false)
go.property("key_pressed_left", false)
go.property("key_pressed_right", false)
go.property("key_pressed_up", false)

local jet_strength_multiplier = 3

local jet_strength = {
	jet_bottom_left = 600 * jet_strength_multiplier,
	jet_bottom_right = 600 * jet_strength_multiplier,
	jet_top_right = 750 * jet_strength_multiplier,
	jet_top_left = 750 * jet_strength_multiplier
}

function init(self)
	msg.post(".", "acquire_input_focus")
	physics.create_joint(physics.JOINT_TYPE_HINGE, "body#co_head", "joint", vmath.vector3(0, 0, 0), "body#co_body", vmath.vector3(0, 0, 0),
	{upper_angle = math.rad(0), lower_angle = math.rad(0), enable_limit = true})
	
	physics.create_joint(physics.JOINT_TYPE_HINGE, "jet_bottom_left#co", "joint", vmath.vector3(0, 0, 0), "body#co_body", vmath.vector3(-15, -30, 0),
	{upper_angle = math.rad(45), lower_angle = math.rad(45), enable_limit = true})
	
	physics.create_joint(physics.JOINT_TYPE_HINGE, "jet_bottom_right#co", "joint", vmath.vector3(0, 0, 0), "body#co_body", vmath.vector3(15, -30, 0),
	{upper_angle = math.rad(-45), lower_angle = math.rad(-45), enable_limit = true})
	physics.create_joint(physics.JOINT_TYPE_HINGE, "jet_top_left#co", "joint", vmath.vector3(0, 0, 0), "body#co_body", vmath.vector3(-20, 0, 0),
	{upper_angle = math.rad(120), lower_angle = math.rad(120), enable_limit = true})
	physics.create_joint(physics.JOINT_TYPE_HINGE, "jet_top_right#co", "joint", vmath.vector3(0, 0, 0), "body#co_body", vmath.vector3(20, 0, 0),
	{upper_angle = math.rad(-120), lower_angle = math.rad(-120), enable_limit = true})
	if self.player == 1 then
		self.up = hash("p1_up")
		self.left = hash("p1_left")
		self.right = hash("p1_right")
	else
		self.up = hash("p2_up")
		self.left = hash("p2_left")
		self.right = hash("p2_right")
		sprite.play_flipbook("body#body", "body2")
		sprite.play_flipbook("jet_bottom_left#jet", "jet2")
		sprite.play_flipbook("jet_bottom_right#jet", "jet2")
		sprite.play_flipbook("jet_top_left#jet", "jet2")
		sprite.play_flipbook("jet_top_right#jet", "jet2")
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		if message.own_group == hash("head") then
			msg.post(".", "release_input_focus")
			particlefx.stop("jet_bottom_left#flame")
			particlefx.stop("jet_bottom_right#flame")
			particlefx.stop("jet_top_left#flame")
			particlefx.stop("jet_top_right#flame")
			msg.post(".", "disable")
			msg.post("/main", "death", {player = self.player})
		end
	elseif message_id == hash("button_pressed") then
		self[message.button] = true
	end
end

function update(self, dt)
	local jets = {jet_top_left = self.jet_top_left, jet_top_right = self.jet_top_right, jet_bottom_left = self.jet_bottom_left, jet_bottom_right = self.jet_bottom_right}
	local config = {}
	if self.key_pressed_left == true then config.jet_top_right = true end
	if self.key_pressed_right == true then config.jet_top_left = true end
	if self.key_pressed_up == true then config.jet_bottom_right = true; config.jet_bottom_left = true end

	for active_jet, val in pairs(jets) do
		if config[active_jet] then
			if not self[active_jet] then
				particlefx.play(active_jet.."#flame")
				self[active_jet] = true
			end
			if self[active_jet] then
				dir = vmath.rotate(go.get_rotation(active_jet), vmath.vector3(0, jet_strength[active_jet], 0))
				pos = vmath.rotate(go.get_rotation(active_jet), vmath.vector3(0, 0, 0))
				msg.post("body#co_body", "apply_force", {force = dir, position = go.get_world_position("body") + pos})
			end
		else
			if self[active_jet] then
				particlefx.stop(active_jet.."#flame")
				self[active_jet] = false
			end
		end
	end
	
	self.key_pressed_left = false
	self.key_pressed_right = false
	self.key_pressed_up = false
end


function on_input(self, action_id, action)
	if action_id == self.left then
		if action.released then
			self.key_pressed_left = false
		else
			self.key_pressed_left = true
		end
	elseif action_id == self.right then
		if action.released then
			self.key_pressed_right = false
		else
			self.key_pressed_right = true
		end
	elseif action_id == self.up then
		if action.released then
			self.key_pressed_up = false
		else
			self.key_pressed_up = true
		end
	end
end
